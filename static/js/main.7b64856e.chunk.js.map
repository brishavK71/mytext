{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","navcomp1","navcomp2","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","defaultProps","Alert","style","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","backgroundColor","color","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7b64856e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand text-decoration-none \" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-a active text-decoration-none text-reset mx-4\" aria-current=\"page\" href=\"/\">{props.navcomp1}</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-a text-decoration-none text-reset p-3\" href=\"/about\">{props.navcomp2}</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} m-1`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" // eslint-disable-next-line\r\n                                role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'dark' ? 'light' : 'dark'}Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    navcomp1: PropTypes.string,\r\n    navcomp2: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"set title here\",\r\n    navcomp1: \"set 1st component here\",\r\n    navcomp2: \"set 2st component here\"\r\n}","\r\nimport React,{useState} from 'react'\r\nexport default function TextForm(props) {\r\n    const handleUpClick= () =>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n    const handleLowClick= () =>{\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n\r\n    const handleClearText= () =>{\r\n        let newText= '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n    }\r\n\r\n    const handleOnChange= (event) =>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy= () =>{\r\n        var text= document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const[text, setText] = useState(\"\"); \r\n    return (\r\n        <> \r\n        <div>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"mybox\" className=\"form-label\"></label>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"\r\n                ></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearText}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n        \r\n        <div className=\"container\">\r\n            <h1>Your Text Summary</h1>\r\n            <p> {text.split(\"/\\s+/\").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p> {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize= (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        { props.alert  && <div>\r\n           <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\n\n\n\nfunction App() {\n \n  // eslint-disable-next-line\n  const[mode,setMode] = useState('light');\n\n  const[alert,setAlert] =useState(null);\n  \n  const showAlert= (message, type)=>{\n    setAlert({\n        msg: message ,\n        type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode= ()=>{\n    if (mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor =\"rgb(56, 56, 56)\";\n      document.body.style.color = \"white\"\n      showAlert(\"Dark mode has been enabled\" , \"success\")\n      document.title=\"myText- Dark Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor =\"white\";\n      document.body.style.color = \"black\"\n      showAlert(\"Light mode has been enabled\" , \"success\")\n      document.title=\"myText- Light Mode\"\n    }\n  }\n    \n    \n  \n    return (\n    <>\n      \n      <Navbar title=\"myText\" navcomp1= \"Home\" navcomp2= \"About us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n      \n        <TextForm showAlert={showAlert} heading=\"Enter your text to analyze\"/>\n        {/* <About mode={mode}/>        */}\n      \n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}